<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://pablomarino.com/feed.xml" rel="self" type="application/atom+xml"/><link href="https://pablomarino.com/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-28T19:18:07+00:00</updated><id>https://pablomarino.com/feed.xml</id><title type="html">blank</title><subtitle>NLP Consulting </subtitle><entry><title type="html">Bronze medal on Developing LLM/RAG system for Kaggle competition.</title><link href="https://pablomarino.com/research_blog/2024/11/18/research1.html" rel="alternate" type="text/html" title="Bronze medal on Developing LLM/RAG system for Kaggle competition."/><published>2024-11-18T00:01:00+00:00</published><updated>2024-11-18T00:01:00+00:00</updated><id>https://pablomarino.com/research_blog/2024/11/18/research1</id><content type="html" xml:base="https://pablomarino.com/research_blog/2024/11/18/research1.html"><![CDATA[<h2 id="the-challenge">The Challenge</h2> <p>Kaggle competition <a href="https://www.kaggle.com/code/pablomarino/dspy-baseline">Eedi - Mining Misconceptions in Mathematics</a> asked for the design and development of an AI system for autonomous finding of misconceptions when grading multiple choice Math exams.</p> <h2 id="my-solution">My Solution</h2> <p>I developed an LLM System that indexed all the possible misconceptions in a vector database (Qdrant) and when grading a multiple choice question, used a series of LLM prompts to translate each wrong answer into a search query that could find the top 10 most likely misconceptions.</p> <h2 id="the-outcome">The Outcome</h2> <p>The accuracy of my system was on par with other competitors’ baselines, which was my goal since this was a baseline system. The value proposition of my solution was the use of Stanford’s DSPY Framework for prompt optimization. My notebook reached Bronze medal on Kaggle and allowed me to develop a better understanding of DSPY framework. I shared my findings in a <a href="https://x.com/pablomarino_com/status/1858288813035933705">tweet</a> where the Author of the framework replied.</p> <p><a href="https://www.kaggle.com/code/pablomarino/dspy-baseline">View my Kaggle submission</a></p>]]></content><author><name></name></author><category term="research_blog"/><summary type="html"><![CDATA[Design of system for Kaggle competition using DSPY framework.]]></summary></entry><entry><title type="html">Studying the impact of different rerankers and hybrid search in a RAG pipeline for Educational documents.</title><link href="https://pablomarino.com/work_blog/2024/10/18/work1.html" rel="alternate" type="text/html" title="Studying the impact of different rerankers and hybrid search in a RAG pipeline for Educational documents."/><published>2024-10-18T00:01:00+00:00</published><updated>2024-10-18T00:01:00+00:00</updated><id>https://pablomarino.com/work_blog/2024/10/18/work1</id><content type="html" xml:base="https://pablomarino.com/work_blog/2024/10/18/work1.html"><![CDATA[<h2 id="the-challenge">The challenge</h2> <p>A client developing a search engine for college students needed to evaluate the effectiveness of different rerankers and hybrid search approaches within a tight timeline.</p> <h2 id="my-solution">My solution</h2> <p>I approached this project through several key steps:</p> <ul> <li>Developed a comprehensive testing set with carefully crafted queries designed to evaluate different aspects of the search system.</li> <li>Created an automated testing program that could process these queries and output detailed results in Excel format.</li> <li>Established a rigorous methodology for manual review and validation of query results.</li> <li>Implemented state-of-the-art (SOTA) rerankers and sparse embedding search to enhance keyword matching capabilities.</li> <li>Generated detailed search performance reports for each system configuration.</li> </ul> <h2 id="the-outcome">The outcome</h2> <p>After thorough analysis of the test results, we discovered that implementing a specific reranker improved search accuracy by 22% without any performance regressions. Based on these findings, we deployed the enhanced configuration to production.</p>]]></content><author><name></name></author><category term="work_blog"/><summary type="html"><![CDATA[RAG Analysis and optimization]]></summary></entry><entry><title type="html">Developing an autonomous agent for Technical support.</title><link href="https://pablomarino.com/work_blog/2024/05/18/work2.html" rel="alternate" type="text/html" title="Developing an autonomous agent for Technical support."/><published>2024-05-18T00:01:00+00:00</published><updated>2024-05-18T00:01:00+00:00</updated><id>https://pablomarino.com/work_blog/2024/05/18/work2</id><content type="html" xml:base="https://pablomarino.com/work_blog/2024/05/18/work2.html"><![CDATA[<h2 id="the-challenge">The challenge</h2> <p>My client, a Silicon Valley startup, already owns a proprietary search engine for technical support. They wanted to build an autonomous agent capable of using that search engine to resolve support tickets autonomously, similar to human agents. The agent needed to be configurable so it could be easily deployed for different clients.</p> <h2 id="my-solution">My solution</h2> <p>I developed a framework that uses a TOML configuration file containing customer-specific details. The system monitors Jira for new ticket submissions and utilizes various tools to guide users toward solutions, including:</p> <p>Internal search functionality Slack messaging to specific internal teams Automated ticket commenting</p> <h2 id="the-outcome">The outcome</h2> <p>The project resulted in a working prototype that successfully resolved low-complexity tickets autonomously.</p>]]></content><author><name></name></author><category term="work_blog"/><summary type="html"><![CDATA[Autonomous agents]]></summary></entry></feed>